name: Comments Trigger

on:
  workflow_dispatch:
    inputs:
      testInput:
        description: 'Some description'
        required: false

env:
  STATUS_CHECK_NAME: Test:Instance
  STATUS_TARGET_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

jobs:
  setup:
    name: Set up
    runs-on: ubuntu-latest
    steps:
      - name: Set status check to pending
        uses: actions/github-script@v4
        env:
          STATUS_STATE: pending
        with:
          script: |
            const { owner, repo } = context.issue;
            await github.repos.createCommitStatus({
              owner,
              repo,
              sha: context.sha,
              context: process.env.STATUS_CHECK_NAME + ' One'
              state: process.env.STATUS_STATE,
              target_url: process.env.STATUS_TARGET_URL
            })

            await github.repos.createCommitStatus({
              owner,
              repo,
              sha: context.sha,
              context: process.env.STATUS_CHECK_NAME + ' Two'
              state: process.env.STATUS_STATE,
              target_url: process.env.STATUS_TARGET_URL
            })

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '14.16.1'

      - name: Parse instances
        id: matrix-instances
        run: node scripts/matrixInstances.js '${{ github.event.inputs.testInput }}'

  runInstances:
    name: 'Run instances for ${{ matrix.instance }}'
    needs: setup
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      STATUS_CHECK_NAME: Test:Instance
      STATUS_TARGET_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        instance: ${{ fromJson(needs.setup.outputs.matrixInstances) }}
        parallel_group: ${{ fromJson(needs.setup.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Echo Matrix Instances
        run: |
          echo '${{ needs.setup.outputs.matrixInstances }}'

  complete:
    name: Update status
    runs-on: ubuntu-latest
    needs: runInstances
    if: always()
    steps:
      - name: Set status check - success / failure / error
        uses: actions/github-script@v4
        env:
          STATUS_STATE: ${{ needs.runInstances == 'success' && 'success' || 'error' }}
        with:
          script: |
            const { owner, repo } = context.issue;

            await github.repos.createCommitStatus({
              owner,
              repo,
              sha: context.sha,
              context: process.env.STATUS_CHECK_NAME + ' One',
              state: process.env.STATUS_STATE,
              target_url: process.env.STATUS_TARGET_URL
            })

            await github.repos.createCommitStatus({
              owner,
              repo,
              sha: context.sha,
              context: process.env.STATUS_CHECK_NAME + ' Two',
              state: process.env.STATUS_STATE,
              target_url: process.env.STATUS_TARGET_URL
            })
